package com.naxian.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CompanyReceivedExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public CompanyReceivedExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCompanyReceiveIdIsNull() {
            addCriterion("company_receive_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdIsNotNull() {
            addCriterion("company_receive_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdEqualTo(Integer value) {
            addCriterion("company_receive_id =", value, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdNotEqualTo(Integer value) {
            addCriterion("company_receive_id <>", value, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdGreaterThan(Integer value) {
            addCriterion("company_receive_id >", value, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_receive_id >=", value, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdLessThan(Integer value) {
            addCriterion("company_receive_id <", value, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdLessThanOrEqualTo(Integer value) {
            addCriterion("company_receive_id <=", value, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdIn(List<Integer> values) {
            addCriterion("company_receive_id in", values, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdNotIn(List<Integer> values) {
            addCriterion("company_receive_id not in", values, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdBetween(Integer value1, Integer value2) {
            addCriterion("company_receive_id between", value1, value2, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andCompanyReceiveIdNotBetween(Integer value1, Integer value2) {
            addCriterion("company_receive_id not between", value1, value2, "companyReceiveId");
            return (Criteria) this;
        }

        public Criteria andIsReadIsNull() {
            addCriterion("is_read is null");
            return (Criteria) this;
        }

        public Criteria andIsReadIsNotNull() {
            addCriterion("is_read is not null");
            return (Criteria) this;
        }

        public Criteria andIsReadEqualTo(Integer value) {
            addCriterion("is_read =", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotEqualTo(Integer value) {
            addCriterion("is_read <>", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadGreaterThan(Integer value) {
            addCriterion("is_read >", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_read >=", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadLessThan(Integer value) {
            addCriterion("is_read <", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadLessThanOrEqualTo(Integer value) {
            addCriterion("is_read <=", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadIn(List<Integer> values) {
            addCriterion("is_read in", values, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotIn(List<Integer> values) {
            addCriterion("is_read not in", values, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadBetween(Integer value1, Integer value2) {
            addCriterion("is_read between", value1, value2, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotBetween(Integer value1, Integer value2) {
            addCriterion("is_read not between", value1, value2, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsInvitationIsNull() {
            addCriterion("is_invitation is null");
            return (Criteria) this;
        }

        public Criteria andIsInvitationIsNotNull() {
            addCriterion("is_invitation is not null");
            return (Criteria) this;
        }

        public Criteria andIsInvitationEqualTo(Integer value) {
            addCriterion("is_invitation =", value, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationNotEqualTo(Integer value) {
            addCriterion("is_invitation <>", value, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationGreaterThan(Integer value) {
            addCriterion("is_invitation >", value, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_invitation >=", value, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationLessThan(Integer value) {
            addCriterion("is_invitation <", value, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationLessThanOrEqualTo(Integer value) {
            addCriterion("is_invitation <=", value, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationIn(List<Integer> values) {
            addCriterion("is_invitation in", values, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationNotIn(List<Integer> values) {
            addCriterion("is_invitation not in", values, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationBetween(Integer value1, Integer value2) {
            addCriterion("is_invitation between", value1, value2, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andIsInvitationNotBetween(Integer value1, Integer value2) {
            addCriterion("is_invitation not between", value1, value2, "isInvitation");
            return (Criteria) this;
        }

        public Criteria andResumeIdIsNull() {
            addCriterion("resume_id is null");
            return (Criteria) this;
        }

        public Criteria andResumeIdIsNotNull() {
            addCriterion("resume_id is not null");
            return (Criteria) this;
        }

        public Criteria andResumeIdEqualTo(Integer value) {
            addCriterion("resume_id =", value, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdNotEqualTo(Integer value) {
            addCriterion("resume_id <>", value, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdGreaterThan(Integer value) {
            addCriterion("resume_id >", value, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("resume_id >=", value, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdLessThan(Integer value) {
            addCriterion("resume_id <", value, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdLessThanOrEqualTo(Integer value) {
            addCriterion("resume_id <=", value, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdIn(List<Integer> values) {
            addCriterion("resume_id in", values, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdNotIn(List<Integer> values) {
            addCriterion("resume_id not in", values, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdBetween(Integer value1, Integer value2) {
            addCriterion("resume_id between", value1, value2, "resumeId");
            return (Criteria) this;
        }

        public Criteria andResumeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("resume_id not between", value1, value2, "resumeId");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeIsNull() {
            addCriterion("receive_time is null");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeIsNotNull() {
            addCriterion("receive_time is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeEqualTo(Date value) {
            addCriterion("receive_time =", value, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeNotEqualTo(Date value) {
            addCriterion("receive_time <>", value, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeGreaterThan(Date value) {
            addCriterion("receive_time >", value, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("receive_time >=", value, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeLessThan(Date value) {
            addCriterion("receive_time <", value, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeLessThanOrEqualTo(Date value) {
            addCriterion("receive_time <=", value, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeIn(List<Date> values) {
            addCriterion("receive_time in", values, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeNotIn(List<Date> values) {
            addCriterion("receive_time not in", values, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeBetween(Date value1, Date value2) {
            addCriterion("receive_time between", value1, value2, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andReceiveTimeNotBetween(Date value1, Date value2) {
            addCriterion("receive_time not between", value1, value2, "receiveTime");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusIsNull() {
            addCriterion("company_received_status is null");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusIsNotNull() {
            addCriterion("company_received_status is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusEqualTo(Integer value) {
            addCriterion("company_received_status =", value, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusNotEqualTo(Integer value) {
            addCriterion("company_received_status <>", value, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusGreaterThan(Integer value) {
            addCriterion("company_received_status >", value, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("company_received_status >=", value, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusLessThan(Integer value) {
            addCriterion("company_received_status <", value, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusLessThanOrEqualTo(Integer value) {
            addCriterion("company_received_status <=", value, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusIn(List<Integer> values) {
            addCriterion("company_received_status in", values, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusNotIn(List<Integer> values) {
            addCriterion("company_received_status not in", values, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusBetween(Integer value1, Integer value2) {
            addCriterion("company_received_status between", value1, value2, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andCompanyReceivedStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("company_received_status not between", value1, value2, "companyReceivedStatus");
            return (Criteria) this;
        }

        public Criteria andXIsNull() {
            addCriterion("x is null");
            return (Criteria) this;
        }

        public Criteria andXIsNotNull() {
            addCriterion("x is not null");
            return (Criteria) this;
        }

        public Criteria andXEqualTo(String value) {
            addCriterion("x =", value, "x");
            return (Criteria) this;
        }

        public Criteria andXNotEqualTo(String value) {
            addCriterion("x <>", value, "x");
            return (Criteria) this;
        }

        public Criteria andXGreaterThan(String value) {
            addCriterion("x >", value, "x");
            return (Criteria) this;
        }

        public Criteria andXGreaterThanOrEqualTo(String value) {
            addCriterion("x >=", value, "x");
            return (Criteria) this;
        }

        public Criteria andXLessThan(String value) {
            addCriterion("x <", value, "x");
            return (Criteria) this;
        }

        public Criteria andXLessThanOrEqualTo(String value) {
            addCriterion("x <=", value, "x");
            return (Criteria) this;
        }

        public Criteria andXLike(String value) {
            addCriterion("x like", value, "x");
            return (Criteria) this;
        }

        public Criteria andXNotLike(String value) {
            addCriterion("x not like", value, "x");
            return (Criteria) this;
        }

        public Criteria andXIn(List<String> values) {
            addCriterion("x in", values, "x");
            return (Criteria) this;
        }

        public Criteria andXNotIn(List<String> values) {
            addCriterion("x not in", values, "x");
            return (Criteria) this;
        }

        public Criteria andXBetween(String value1, String value2) {
            addCriterion("x between", value1, value2, "x");
            return (Criteria) this;
        }

        public Criteria andXNotBetween(String value1, String value2) {
            addCriterion("x not between", value1, value2, "x");
            return (Criteria) this;
        }

        public Criteria andXxIsNull() {
            addCriterion("xx is null");
            return (Criteria) this;
        }

        public Criteria andXxIsNotNull() {
            addCriterion("xx is not null");
            return (Criteria) this;
        }

        public Criteria andXxEqualTo(String value) {
            addCriterion("xx =", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxNotEqualTo(String value) {
            addCriterion("xx <>", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxGreaterThan(String value) {
            addCriterion("xx >", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxGreaterThanOrEqualTo(String value) {
            addCriterion("xx >=", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxLessThan(String value) {
            addCriterion("xx <", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxLessThanOrEqualTo(String value) {
            addCriterion("xx <=", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxLike(String value) {
            addCriterion("xx like", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxNotLike(String value) {
            addCriterion("xx not like", value, "xx");
            return (Criteria) this;
        }

        public Criteria andXxIn(List<String> values) {
            addCriterion("xx in", values, "xx");
            return (Criteria) this;
        }

        public Criteria andXxNotIn(List<String> values) {
            addCriterion("xx not in", values, "xx");
            return (Criteria) this;
        }

        public Criteria andXxBetween(String value1, String value2) {
            addCriterion("xx between", value1, value2, "xx");
            return (Criteria) this;
        }

        public Criteria andXxNotBetween(String value1, String value2) {
            addCriterion("xx not between", value1, value2, "xx");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_received
     *
     * @mbggenerated do_not_delete_during_merge Thu Oct 10 09:41:05 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_received
     *
     * @mbggenerated Thu Oct 10 09:41:05 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}